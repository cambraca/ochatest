<?php

module_load_include('inc', 'ocha_data', 'display');
module_load_include('inc', 'ocha_data', 'process');

const OCHA_DATASET_ALL_PROJECTS = 'all_projects';
const OCHA_DATASET_ALL_AGENCIES = 'all_agencies';
const OCHA_DATASET_KEY_FIGURES = 'key_figures';
const OCHA_DATASET_RELIEFWEB_MAPS = 'reliefweb_maps';

/**
 * Defines which datasets we manage. Supported formats: xml, csv.
 *
 * @return array
 */
function _ocha_datasets() {
  return [
    OCHA_DATASET_ALL_PROJECTS => [
      'url' => 'https://stg-cerfgms-webapi.unocha.org/v1/project/All.xml',
      'name' => 'all_projects.xml',
      'format' => 'xml',
      'process' => [
        'function' => '_ocha_data_process_simple_table',
        'args' => ['project', 'ProjectID'],
      ],
    ],
    OCHA_DATASET_ALL_AGENCIES => [
      'url' => 'https://stg-cerfgms-webapi.unocha.org/v1/agency/All.xml',
      'name' => 'all_agencies.xml',
      'format' => 'xml',
      'process' => [
        'function' => '_ocha_data_process_simple_table',
        'args' => ['agency', 'AgencyID'],
      ],
    ],
    OCHA_DATASET_KEY_FIGURES => [
      'url' => 'https://stg-cerfgms-webapi.unocha.org/v1/KeyFigures/All.xml',
      'name' => 'key_figures.xml',
      'format' => 'xml',
    ],
    OCHA_DATASET_RELIEFWEB_MAPS => [
      'url' => 'https://api.reliefweb.int/v1/reports' .
        '?filter[operator]=AND' .
        '&filter[conditions][0][field]=source' .
        '&filter[conditions][0][value]=' . urlencode('UN Office for the Coordination of Humanitarian Affairs') .
        '&filter[conditions][1][field]=format' .
        '&filter[conditions][1][value][]=Map' .
        '&limit=4' .
        '&preset=latest' .
        '&fields[include][]=url_alias' .
        '&fields[include][]=file.preview.url-large' .
        '&fields[include][]=ocha_product.name',
      'name' => 'reliefweb_maps.json',
      'format' => 'json',
      'process' => [
        'function' => '_ocha_data_process_simple_table',
        'args' => ['data', 'id'],
      ],
    ],
  ];
}

/**
 * @param $which string One of the keys of the array returned by _ocha_datasets().
 *
 * @return array
 * @throws \Exception
 */
function ocha_get_data($which) {
  static $cache = [];
  if (isset($cache[$which]))
    return $cache[$which];

  $datasets = _ocha_datasets();
  $dataset = $datasets[$which];

  $filename = cache_get('ocha_filename_'.$which);
  if (!$filename) {
    $filename = _ocha_load_from_url($which);

    if ($filename) {
      // Cache expires after 7 days
      cache_set('ocha_filename_'.$which, $filename, 'cache', time() + 60*60*24*7);
    }
  } else
    $filename = $filename->data;

  if (!$filename)
    throw new Exception('Error loading from data source: '.$which);

  $realpath = drupal_realpath($filename);
  switch ($dataset['format']) {
    case 'xml':
      $xml = simplexml_load_file($realpath);
      $data = json_decode(json_encode($xml), TRUE);
      break;
    case 'json':
      $data = json_decode(file_get_contents($realpath), TRUE);
      break;
    default:
      throw new Exception('Unknown data format: '. $dataset['format']);
  }

  // Run custom processing on the raw data received
  if (array_key_exists('process', $dataset)) {
    $args = [$data];
    if (array_key_exists('args', $dataset['process']))
      $args = array_merge($args, $dataset['process']['args']);
    $data = call_user_func_array($dataset['process']['function'], $args);
  }

  $cache[$which] = $data;
  return $cache[$which];
}

/**
 * Loads the given data set into a local file stored in the public directory.
 *
 * @param string $which One of the following: allprojects, TODO?
 *
 * @return NULL|string The generated filename (includes date/time)
 * @throws \Exception
 */
function _ocha_load_from_url($which) {
  $datasets = _ocha_datasets();

  if (!array_key_exists($which, $datasets))
    throw new Exception('Unknown data source');

  $dir = 'public://data';
  if (!is_dir($dir))
    drupal_mkdir($dir);

  $destination = 'public://data/' . date('Y-m-d-H-i-s ') . $datasets[$which]['name'];

  $result = drupal_http_request($datasets[$which]['url'], ['timeout' => 120]);
  if ($result->code != 200)
    return NULL;

  return file_unmanaged_save_data($result->data, $destination);
}
